user  nginx;
worker_processes  auto;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 2000;

events {
    worker_connections  1024;
    # Accept as many connections as possible, after nginx gets notification about a new connection.
    multi_accept on;
}

http {
    server_tokens off;
    log_not_found off;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    http2_max_field_size 64k;
    http2_max_header_size 64k;

    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 4 32k;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    error_log  /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log main buffer=16k;
    
    charset utf-8;
    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay    on;
    types_hash_max_size 2048;

    proxy_buffer_size   128k; 
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;
    # request timed out -- default 60
    client_header_timeout 60;
    client_body_timeout 60;
    # if client stop responding, free up memory -- default 60
    send_timeout 60;
    # server will close connection after this time -- default 75
    keepalive_timeout 65;
    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 100;

    gzip  on;
    gzip_disable "msie6";
    
     # DDoS Mitigation 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn perip 100;
    limit_req_zone $binary_remote_addr zone=engine:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;

    include /etc/nginx/conf.d/*.conf;
}